name: CI/CD Pipeline

on:
  push:
    branches:
      - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx (for multi-platform builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 4: Build Docker images for frontend, backend, and database
    - name: Build Docker images
      run: |
        # Build the backend Docker image
        docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend
        # Build the frontend Docker image
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend
        # Build the database Docker image
        docker build -t ${{ secrets.DOCKER_USERNAME }}/database:latest ./database

    # Step 5: Push Docker images to DockerHub
    - name: Push Docker images to DockerHub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/database:latest

    # Step 6: Set up kubectl for deploying to Minikube
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    # Step 7: Deploy the application to Minikube (backend, frontend, and database)
    - name: Deploy to Minikube
      run: |
        # Apply backend deployment and service YAML files
        kubectl apply -f backend-deployment.yaml
        kubectl apply -f backend-service.yaml
        # Apply frontend deployment and service YAML files
        kubectl apply -f frontend-deployment.yaml
        kubectl apply -f frontend-service.yaml
